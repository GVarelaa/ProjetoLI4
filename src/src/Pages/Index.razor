@page "/"
@inject IJSRuntime js 

<PageTitle>Index</PageTitle>

@*
<style>
	body, html {
		height: 100%;
	}

	.container{
		height: 80%;
		display: grid;
		grid-template-columns: 33% 33% 33%;
	}

	button {
		background-color: var(--color-blue);
		border: none;
		border-radius: 100px;
		width: 200px;
		height: 100px;
		align-self: center;
		justify-self: center;
	}

	a{
		text-decoration: none;
	}

	h1 {
		padding: 10px;
		color: white;
	}
</style>

<div class="container">
	<button><a href="/Feiras"><h1>Cliente</h1></a></button>
	<button><a href="/Vendedor"><h1>Vendedor</h1></a></button>
	<button><a href="/CriarFeira"><h1>Admin</h1></a></button>
</div>
*@


<AuthorizeView Roles="Cliente">
	
</AuthorizeView>

<AuthorizeView Roles="Vendedor">

</AuthorizeView>


@code{
	[CascadingParameter]

	private Task<AuthenticationState> authenticationState { get; set; }

	private async Task DisplayGreetingAlert()
	{
		var authState = await authenticationState;
		var message = $"Hello {authState.User.Identity.Name}";
		await js.InvokeVoidAsync("alert", message);
	}


}
